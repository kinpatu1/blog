AWSのサービスEC2についてまとめました（2）

今回は前回作成したLinuxインスタンスに、Mac、Windowsから、アクセスする方法について説明していきます。

Mac
パブリックサブネットへのアクセス
Macを利用されている方は、ターミナルでインスタンスにアクセスしていきます。

今回利用するインスタンスのIPアドレスは以下になります。

﻿	パブリックIPアドレス	プライベートIPアドレス
　パブリックインスタンス	　54.161.139.136	　　　10.0.1.105
プライベートインスタンス	　　　　　-	　　　10.0.10.104
﻿
インスタンス作成後に「接続」>「例」の所にある、コマンドを使います。

画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-07-29-23.22.16-1024x622.png
<!-- pemキーを置いている場所に移動する -->
cd secret

<!-- パブリックインスタンスにアクセスする -->
ssh -i "Virginia.pem" ec2-user@ec2-54-161-139-136.compute-1.amazonaws.com

<!-- 初回ログイン時は接続確認をされる -->
yes

- Lang Select -
data-line属性値
ファイル名
画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-07-28-23.01.28-1024x273.png
以上でパブリックインスタンスにアクセスできました。

プライベートサブネットへのアクセス
上記手順でパブリックインスタンスへログインしている状態で、以下手順を踏んでください。


<!-- ec2-userとしてログインしているので、そのアクセス権限を変更する
　　　ec2-userだけに権限を与える -->
chmod 700 ~

<!-- ec2-userより上のディレクトリに移動する -->
cd ..

<!-- ec2-userのアクセス権限が「drwx------」になっているのを確認する -->
ls -l

<!-- パブリックインスタンスから出る -->
exit

<!-- 自分のパソコンに保存しているpemキーをパブリックインスタンスにコピーする -->
scp -i <ローカルにおいてあるpemキーの場所> <ローカルにおいてあるpemキーの場所> ec2-user@54.161.139.136:~/

<!-- 再度パブリックインスタンスにアクセスする -->
ssh -i "Virginia.pem" ec2-user@ec2-54-161-139-136.compute-1.amazonaws.com

<!-- パブリックインスタンスにコピーしたpemキーでプライベートインスタンスにアクセスする -->
ssh -i ~/virginia.pem  ec2-user@10.0.10.104

<!-- プライベートインスタンスへの初回ログイン時にも接続確認をされる -->
yes

- Lang Select -
data-line属性値
ファイル名
画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-07-28-23.41.24-1024x410.png
以上でプライベートインスタンスにアクセスできました。

pemキーのフルパスの調べ方は、pemキーの上でクリックして以下の画面を出し、「option」をクリックします。

画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-07-28-23.48.17-1024x796.png
おまけ
上記の方法以外にも、ローカルから直接プライベートインスタンスにアクセスする方法があります。

今までしてきた様なパブリックインスタンスに、pemキーをコピーする作業は不要です。

パブリックインスタンスにpemキーを置きたくない人にはオススメです。


<!-- ローカルからプライベートインスタンスに直接アクセスする -->
ssh -o ProxyCommand='ssh -i <pemまでのフルパス> ec2-user@54.161.139.136  -W 10.0.10.104:22' -i <pemまでのフルパス> ec2-user@10.0.10.104

<!-- プライベートインスタンスへの初回ログイン時にも接続確認をされる -->
yes

- Lang Select -
data-line属性値
ファイル名
画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-07-28-23.37.00-1024x196.png
Windows
予備知識
これから良く出てくるポートについて説明します。

ポートとはインスタンスにアクセスするための、ドアをイメージして頂けたらと思います。

ドアには一つずつ番号が振ってあり、一つのインスタンスに同じ番号のドアを複数割り当てることはできないです。

下の図でいうソースは、そのドア（ポート番号）へアクセスする対象のことです。

下の図の一つを説明すると、インスタンス3はインスタンス2から、ポート番号1022へのSSH接続を許可しています。

インスタンス2からのSSH接続でも、ポート番号22への接続はできないです。
もちろんインスタンス1からのポート番号1022への接続もできないです。

画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram-1-2.png
パブリックサブネットへのアクセス
Windowsを利用されている方は、Tera Termでインスタンスにアクセスしていきます。

今回利用するインスタンスのIPアドレスは以下になります。先程とは違っています。

﻿	パブリックIPアドレス	プライベートIPアドレス
   パブリックインスタンス	54.64.235.96	-
 プライベートインスタンス	-	10.0.10.175
﻿
パブリックインスタンスのポート番号は22を開けておきます。

画像に alt 属性が指定されていません。ファイル名: 1-1.png
Macでインスタンスに接続した時同様に、接続確認されます。

画像に alt 属性が指定されていません。ファイル名: 2-1.png
ユーザー名にec2-user、秘密鍵へのフルパスを書きます。

画像に alt 属性が指定されていません。ファイル名: 3-1.png
以上でパブリックインスタンスにアクセスできました。

プライベートサブネットへのアクセス
先程作成したパブリックインスタンス上で、プライベートインスタンスへのアクセス設定をしていきます。

SSH転送の設定をすることで、パブリックインスタンス経由で、プライベートインスタンスにアクセスできます。

画像に alt 属性が指定されていません。ファイル名: 4-1024x565.png
「ローカルのポート」とはパブリックインスタンスのポート番号のことです。

「リモート側ホスト」はプライベートインスタンスのプライベートIPアドレスになります。

「ポート」はプライベートインスタンスのポート番号で、22を開けておきます。

この設定をすることで、パブリックインスタンスの10022にアクセスがきたら、プライベートインスタンスの22にアクセスを飛ばします。

画像に alt 属性が指定されていません。ファイル名: 5.png
確認画面では特に何もしないです。

画像に alt 属性が指定されていません。ファイル名: 6.png
新しい接続を開始します。

この時今まで開いていた接続を切ると、設定がなくなるので消したらいけないです。

画像に alt 属性が指定されていません。ファイル名: 7.png
127.0.0.1とはローカル・ループバック・アドレスと呼ばれ、自分自身を指すIPアドレスになります。

現在パブリックIPアドレスにアクセスしているので、ここでいう127.0.0.1はパブリックIPアドレスのことです。

先程10022にアクセスがあったら、プライベートインスタンスに飛ぶように設定したので、TCPポートには10022を設定します。

画像に alt 属性が指定されていません。ファイル名: 8.png
再度接続確認されます。

画像に alt 属性が指定されていません。ファイル名: 9.png
パブリックインスタンスへのアクセス方法と同じです。

画像に alt 属性が指定されていません。ファイル名: 10.png
上がパブリックインスタンスにアクセスしたTeraTerm、下にはプライベートインスタンスにアクセスしたTeraTermができています。

画像に alt 属性が指定されていません。ファイル名: 11.png
以上でプライベートインスタンスにアクセスできました。

まとめ
個人的にはWindowsからのアクセスの方が楽な気がしました。

ポートの所はセキュリティグループや、ネットワークACLでも、必須なのでこれからもっと勉強しないといけないなと思っています。

