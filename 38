スポットインスタンスを作成してみた(2)_ver1

スポットインスタンスに関する2つ目の記事になります。

今回は起動テンプレートを作成し、スポットインスタンスを起動する方法についてまとめていきます。

この起動テンプレートはAuto Scallingの設定で利用することで、スポットインスタンスを作成することができます。

続きを読む
🔗起動テンプレート名と説明
🔗起動テンプレート名
リージョン内で被らない様に、起動テンプレート名を定義する必要があります。

🔗テンプレートバージョンの説明
自由に説明を書くことができます。

🔗Auto Scaling のガイダンス
Auto Scalingの設定の際に、起動テンプレートを利用することができますが、Auto Scalingで利用するために必要な設定をしていないと、起動テンプレートを作成できない様にする設定になります。

この記事を作成した時点では、AMIの選択が必須になる様です。

🔗テンプレートタグ
以前の記事を参考にしてください。

🔗ソーステンプレート
以前に作成した起動テンプレートを選択することで、以前の設定が自動で反映され、以前の設定から変更したい部分だけを修正するといったことができます。

🔗Amazon マシンイメージ (AMI) 
以前の記事を参考にしてください。

🔗インスタンスタイプ 
以前の記事を参考にしてください。

🔗キーペア (ログイン) 
以前の記事を参考にしてください。

🔗ネットワーク設定
🔗ネットワーキングプラットフォーム
この設定ではVPC、EC2-Classicを選択することができますが、2013年以降EC2-Classicは新しく作成できない様になったので、VPCを選択することになるかと思います。

🔗セキュリティグループ
以前の記事を参考にしてください。

🔗ストレージ (ボリューム)
以前の記事を参考にしてください。

🔗リソースタグ
起動テンプレートから作成されたリソース全てに対して、タグが割り当てられます。

リソース管理が簡易になるので大変便利かと思います。

🔗ネットワークインターフェイス 
1つのインスタンスに対して、複数のネットワークインターフェイスをアタッチすることができます。

先程、セキュリティグループの設定をしていると、この設定はできないです。

🔗デバイスインデックス
ネットワークインターフェイスをインスタンスにアタッチする順番になります。

デバイスインデックスが0のネットワークインターフェイスを、プライマリネットワークインターフェイスと言います。

🔗終了時に削除
スポットインスタンスが中断されてインスタンスが終了する時に、ネットワークインターフェイスも一緒に削除するか、残しておくかを選択することができます。

🔗ネットワークインターフェイス
他のインスタンスにアタッチしているネットワークインターフェイス等、既に作成済みのネットワークインターフェイスを選択することができます。

🔗説明
新しくネットワークインターフェイスを作成する際に、どの様な設定をしているのか説明を書くことができます。

🔗プライマリ IP
サブネットを作成する際に指定したIPv4 CIDRの範囲の中で、ネットワークインターフェイスに割り当てるプライベートIPv4 アドレスを指定することができます。

🔗IPv6 IP
サブネットを作成する際に指定したIPv6 CIDRの範囲の中で、ネットワークインターフェイスに割り当てるプライベートIPv6 アドレスを指定することができます。

🔗Elastic Fabric Adapter
より低く、より一貫したレイテンシーとより高いスループットを実現することができます。

機械学習にスポットインスタンスを利用する時に、この設定をすることが良いかと思います。

🔗サブネット、パブリック IP の自動割り当て、セキュリティグループ
以前の記事を参考にしてください。

🔗セカンダリ IP
以前の記事を参考にしてください。

🔗高度な詳細
🔗購入オプション
今回はスポットインスタンスを作成する方法について書いているので、「スポットインスタンスをリクエスト」にチェックする必要があります。

購入オプションを選択し、カスタマイズを選択することで、前回の様な設定をすることができます。

画像に alt 属性が指定されていません。ファイル名: スクリーンショット-2020-11-24-0.16.53-1024x413.png
🔗Elastic GPU
Windows インスタンスと Microsoft Windows Server 2012 R2 以降のみにアタッチすることができます。

インスタンスにアタッチすることで、OpenGL 4.3 のアクセラレーション機能を簡単に追加できるサービスです。

🔗クレジット仕様
クレジット仕様を理解する為には、バースト機能、CPU クレジット、ベースラインを理解する必要があります。

インスタンスタイプが、T2、T3等、頭にTがついているインスタンスにはバースト機能というものがあります。

これらインスタンスタイプには、ベースラインというあらかじめ決められたCPU使用率が定義されています。 

インスタンスの負荷が高まり、CPU使用率が高まりベースラインを越えると、CPUクレジットを利用することで、CPU使用率を維持することができます。
この機能をバースト機能といいます。

しかし、CPUクレジットも無制限ではないのでいつかなくなります。このなくなった後の動作をこのオプションでは選択することができます。

無制限          : 課金することでバースト機能を使い続けることができる
スタンダード: ベースライン以下のCPU使用率を維持する

画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram-3-2-1024x745.png
🔗EBS 最適化インスタンス
インスタンスとEBS間のネットワークスループットを最大にするために、専用の回線を作ります。

通常、インスタンスは他のインスタンスや、EBS等様々なAWSリソースと同じ回線を利用して通信をしています。

そのため、インスタンスとEBS間の通信は混雑することもあります。

その様な時の為にこの設定があります。

画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram-19-1024x409.png
🔗RAM ディスク ID
準仮想化 (PV) AMI を利用する際に利用できる様です。

🔗カーネル ID
準仮想化 (PV) AMI を利用する際に利用できる様です。

🔗Nitro Enclave
機密情報等絶対に第三者に見られたくないものを保存する場所を、インスタンス内に作成します。

したがって、普段利用しているCPUやメモリ領域を別に作成する様なイメージです。

参考記事: ①　②
🔗ライセンス設定
AWS License Managerで管理しているライセンスを利用することができます。

AWS License Managerについてはこちらを参照ください。

🔗IAM インスタンスプロフィール、シャットダウン動作、停止 - 休止動作、終了保護、CloudWatch モニタリングの詳細、Elastic Inference、プレイスメントグループ名、キャパシティーの予約、テナンシー、アクセス可能なメタデータ、メタデータのバージョン、メタデータレスポンスのホップ制限、ユーザーデータ
以前の記事を参考にしてください。


﻿

料金表
画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram-4-1-1.png
まとめ
前回設定した方法よりも詳細な設定ができました。

また同じ設定を使い回しできるので、便利かと思いました。

記事が長くなったので、実際にAutoScallingに利用する方法は別の記事にまとめます。

