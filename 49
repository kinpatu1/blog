Auto Scallingグループの終了ポリシーのTerminate設定

sysopsの資格を学習する中で、Auto Scallingの機能で便利なものを見つけました。

これを利用することで、Auto Scallingで起動したインスタンスがヘルスチェックに失敗した際に、原因追求をすることができます。

続きを読む
🔗きっかけ
以前、お客様にインスタンスが知らない間に終了しているが、原因は分かりますかと聞かれたことがあります。

この時、私はCloudTrailを見て人的ミスで終了されたのではないことを確認し、システムログを渡すことしかできませんでした。

Auto Scallingではインスタンスのヘルスチェックに失敗すると、デフォルトではインスタンスは終了されてしまいます。

これではログを見たりして、終了した原因を追求することはできません。

この時に役に立つのが、終了ポリシーのTerminate設定です。

🔗終了ポリシー
🔗終了ポリシーのTerminateとは
終了ポリシーのTerminateを設定することで、ヘルスチェックに失敗したインスタンスを終了しないで、実行中のままにしておくことができます。

🔗注意する点
終了ポリシーのTerminate設定についてメリットを説明しましたが、やはりデメリットもある様です。

インスタンスを削除しないので、Auto Scaling グループ設定の際に指定した希望する容量は満たしたままになる様です。

したがって、例えば希望する要領を2に設定していても、実際Auto Scaling グループ上で、ヘルスステータスがHealthyになっているインスタンスは1になってしまいます。

🔗事前準備
以前の記事を参考に以下構成を作成しておいてください。

ALB+AutoScallingの設定をしました（１）
ALB+AutoScallingの設定をしました（２）
画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram-7.png
🔗終了ポリシーの設定
「EC2のダッシュボード」>「Auto Scaling Groups」>対象のAuto Scaling Groupsをクリックします。

画像に alt 属性が指定されていません。ファイル名: EC2-Management-Console-1024x543.png
「高度な設定」から「編集」をクリックします。

画像に alt 属性が指定されていません。ファイル名: EC2-Management-Console-1-1024x584.png
「中断されたプロセス」をクリックし、Terminateを選択します。

画像に alt 属性が指定されていません。ファイル名: EC2-Management-Console-2-1024x543.png
次にヘルスチェックパスに指定しているファイルを削除して、インスタンスのヘルスチェックを失敗させます。

[ec2-user@ip-10-0-1-248 ~]$ cd /var/www/html
[ec2-user@ip-10-0-1-248 html]$ ls
health.html
[ec2-user@ip-10-0-1-248 html]$ sudo rm -f health.html
[ec2-user@ip-10-0-1-248 html]$ ls
[ec2-user@ip-10-0-1-248 html]$

- Lang Select -
ファイル名
data-line属性値
少し時間を置いてから確認すると、ヘルスチェックには失敗しているが、インスタンスは終了されていないのが確認できます。

「EC2のダッシュボード」>「Auto Scaling Groups」>対象のAuto Scaling Groupsをクリックします。

画像に alt 属性が指定されていません。ファイル名: EC2-Management-Console-3-1024x584.png
「インスタンス管理」からヘルスチェックパスに指定しているファイルを削除したインスタンスを確認すると、Unhealthyになっているのが確認できます。

画像に alt 属性が指定されていません。ファイル名: EC2-Management-Console-1-1-1024x543.png
「インスタンス」から対象インスタンスが実行中のままなのが確認できます。

画像に alt 属性が指定されていません。ファイル名: インスタンス-EC2-Management-Console-1-1024x584.png
料金表
画像に alt 属性が指定されていません。ファイル名: Untitled-Diagram.png
まとめ
普段意図しないインスタンスの終了が発生しないのであれば、この設定はしない方が良いかと思います。

意図しないインスタンスの終了が発生し、短期間での原因追求をする際には向いている機能かと思います。

