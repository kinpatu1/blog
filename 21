同一インスタンスで複数ポートに負荷分散してみた

今回のテーマはAWS 認定 デベロッパー – アソシエイトの問題で出てきたものです。

インスタンスを2つ作成しないで、1つのインスタンスのポートを２つ開けてALBを設定することで負荷分散ができるみたいです。

可用性、耐障害性は落ちますが料金は抑えられます。


目次 [非表示]

1 🔗事前準備
2 🔗インスタンス内での設定
2.1 🔗Apacheのインストール
2.2 🔗80番ポートの設定
2.2.1 🔗テストページの作成
2.3 🔗81番ポートの設定
2.3.1 🔗テストページの作成
2.4 🔗ポート81と/var/www/html2との関連付け
3 🔗ALBの設定
3.1 🔗ヘルスチェックファイルの作成
3.2 🔗ALB、port80用のターゲットグループ作成
3.3 🔗port81用のターゲットグループ作成
3.4 🔗トラフィック分散の設定
4 まとめ
🔗事前準備
VPC、EC2を作成し以下構成を作成しておいてください。
ALBの設定はこの記事後半で設定するので作成しなくて大丈夫です。


🔗インスタンス内での設定
今回インスタンスの80番ポートと81番ポートに対して負荷分散をします。

🔗Apacheのインストール
インスタンスにアクセスし、以下コードを入力します。

# Apacheをインストールします
sudo yum -y install httpd
# Apacheを起動します
sudo service httpd start
# Apacheを自動起動させます
sudo systemctl enable httpd.service
この状態でインスタンスのパブリックIPをブラウザに入力すると以下画面が表示されます。


🔗80番ポートの設定
🔗テストページの作成
以下コードで、負荷分散できていることを確認しやすい様に、パブリックIPを入力した時に表示させる画面を作成します。

# /var/www/html/以下においたファイルが、ユーザーがアクセスした時に見るページになります
cd /var/www/html/
# ユーザーがアクセスした時に見るページを作成します
sudo su
vi index.html
# viで挿入モードにします
a
# htmlページを作成します
<html>
<head><title>テスト1(ポート80)</title></head>
<body>
<p>テスト1(ポート80)</p>
</body>
</html>
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
再度、インスタンスのパブリックIPをブラウザに入力すると以下画面が表示されます。


🔗81番ポートの設定
🔗テストページの作成
次に、負荷分散する時のページをもう一つ作成します。

# 先程のhtmlフォルダと同じ階層にhtml2フォルダを作成します
cd /var/www/
mkdir html2
# 先程と同じ様にユーザーがアクセスした時に見るページを作成します
cd html2
vi index.html
# viで挿入モードにします
a
# htmlページを作成します
<html>
<head><title>テスト2(ポート81)</title></head>
<body>
<p>テスト2(ポート81)</p>
</body>
</html>
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
これで81番ポートで表示させたいページはできましたが、セキュリティグループで81番ポートを開けないと、ブラウザに入力しても新しいページは開けないです。

セキュリティグループのインバウンドルールで、新しく「カスタムTCP」、「81」、「0.0.0.0.0/0」の設定をします。


81番ポートでアクセスしないといけないので、ブラウザに入力する内容は「パブリックIP:81」となります。

この段階でポート81にアクセスしても、/var/www/html2以下のページを表示する設定がされていないので、「パブリックIP:81」をブラウザに入力しても何も表示されないです。

🔗ポート81と/var/www/html2との関連付け
ポート81へのアクセスは、/var/www/html2以下のファイルを表示する様に設定します。

ポート81と/var/www/html2との関連付けをするには、Apacheの設定ファイルを変更する必要があります。

# Apacheの設定ファイルがあるディレクトリに移動します
cd /etc/httpd/conf
# 設定ファイルを編集します
vi httpd.conf
# viで挿入モードにします
a
# httpd.confを編集します
Listen 81

NameVirtualHost *:81

<VirtualHost *:81>
    ServerName localhost
    DocumentRoot "/var/www/html2"
</VirtualHost>
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
# 設定を反映させるために再起動します
service httpd restart
これで「パブリックIP:81」をブラウザに入力すると以下画面が表示されます。


81番ポートに設定した/var/www/html2のページが開かれているのが確認できます。

🔗ALBの設定
🔗ヘルスチェックファイルの作成
ALBがインスタンスに対して、ヘルスチェックする時のファイルを作成します。

まずはhtml以下にヘルスチェックファイルを作成します。

# ALBがヘルスチェックする場所に移動します
cd /var/www/html
# ヘルスチェックファイルを作成します
vi health.html
# viで挿入モードにします
a
# health.htmlを編集します
ok
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
次にhtml2以下にヘルスチェックファイルを作成します。

# ALBがヘルスチェックする場所に移動します
cd /var/www/html2
# ヘルスチェックファイルを作成します
vi health.html
# viで挿入モードにします
a
# health.htmlを編集します
ok
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
🔗ALB、port80用のターゲットグループ作成
「ロードバランサー」>「ロードバランサーの作成」を選択します。


次の画面で「Application Load Balancer」を選択します。

次の画面で「名前」、インスタンスを作成した「VPC」、「インスタンスがあるサブネットと、別のアベイラビリティーゾーンにあるサブネット」を選択します。

次にセキュリティグループは先程作成したものを選択してください。

次に、名前には「port80」、ポートには「80」、パスには「health.html」を選択します。


次の画面でインスタンスを登録します。

以上で、ALB、port80用のターゲットグループは作成できました。

🔗port81用のターゲットグループ作成
「ターゲットグループ」>「Create target group」を選択します。


ターゲットグループには「port81」、portには「81」、VPCは先ほどと同じものを選択します。

下の方で先ほど同様に、Health check Pathに「health.html」を入力します。


次の画面でインスタンスを登録します。

🔗トラフィック分散の設定
「ロードバランサー」>「リスナー」>「リスナーを選択」>「編集」を選択します。


トラフィック分散を50に設定します。


ALBのDNSをブラウザに入力し、何度か読み込みすると、2つのページを移動しているのが分かります。



まとめ
今回実際に設定をすることで、1つのインスタンス内でロードバランスできるのが分かりました。

また、インスタンス内でのバーチャルホストの設定について学べたので良かったです。

試験問題の中には利用できる構成がたくさんあると思いますので、また興味を持ったものは記事にしていきたいと思います。

