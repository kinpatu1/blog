ALB+AutoScallingの設定をしました（２）

AWSの定番のネットワーク構成であるALB+AutoScallingの二回目の記事になります。

第二回目は、ALBの設定をします。

作成するネットワーク構成は以下になります。


目次 [非表示]

1 🔗事前準備
2 🔗インスタンスの設定
2.1 🔗ヘルスチェックファイルの作成
2.2 🔗テストページの作成
3 🔗ALBの設定
4 🔗AutoScallingの設定
5 料金表
6 まとめ
🔗事前準備
前回の記事を参考に以下構成を作成しておいてください。

ただ、AutoScallingの設定をする時に使うAMIはこちらのものを利用してください。


🔗インスタンスの設定
🔗ヘルスチェックファイルの作成
ALBはインスタンスに負荷分散するサービスですが、インスタンスが負荷分散して良い状態なのか、定期的にアクセスすることで確認しています。

定期的に確認する時に利用するファイルを、ALBがアクセスできる場所に置く必要があります。

前回設定したインスタンスに追加で設定していきます。

# ALBがヘルスチェックする場所に移動します
cd /var/www/html
# ヘルスチェックファイルを作成します
vi health.html
# viで挿入モードにします
a
# health.htmlを編集します
ok
# vi画面から出ます
escをクリックしてから、shiftを押しながらzを二回記入します
これでヘルスチェックファイルはできました。

前回の記事を参考にAMIを作成してください。

🔗テストページの作成
前回の記事を参考にして作成したインスタンスの中に、テストページを作成してください。

ここでは分かりやすい様にアベイラビリティーゾーンaにあるインスタンスにはtest1、アベイラビリティーゾーンbにあるインスタンスにはtest2と表示する様に、htmlファイルを作成しましょう。

🔗ALBの設定
ec2ダッシュボードから「ロードバランサー」>「ロードバランサーの作成」を選択します。


次の画面で「Application Load Balancer」を選択します。

ALBの名前を入力し、インスタンスがある、VPC、サブネットを選択します。


次の画面で「セキュリティ設定の構成」と出てきますが、これはALBでHTTPS接続をする時にする設定になります。

次の画面でインバウンドルールでHTTPポート80番が開いているセキュリティグループを選択します。

ヘルスチェックのパスを設定します。


次の画面で先ほど作成したインスタンスを選びます。

以上でALBの設定完了です。

🔗AutoScallingの設定
「AutoScalling Groups」>「blog」を選択します。


「ロードバランシング」>「編集」を選択します。


「ロードバランサーのターゲットグループを選択」で先ほど作成したALBを選択します。


「ロードバランサー」>「DNS名」をコピーしブラウザに入力するとtest1、test2が表示されインスタンスに対して、負荷分散できているのが確認できます。


料金表

まとめ
私は最初ALBの設定の際に、プライベートサブネットを選択していて上手くいかなかったです。

ALBには便利な設定があったのでまた別の記事に上げていきたいと思います。
